{"ast":null,"code":"var _jsxFileName = \"/home/valynhall/code/flexera-assessment-app/my-app/src/components/RepoPicker.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport RepoTable from './RepoTable';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 600\n  },\n  h6: {\n    fontSize: 14\n  },\n  description: {\n    fontSize: 14,\n    width: 50\n  },\n  image: {\n    width: 50\n  }\n});\n\nfunction createData(avatar_url, full_name, description) {\n  return {\n    avatar_url,\n    full_name,\n    description\n  };\n}\n\nfunction RepoPicker(props) {\n  let initialValue = window.localStorage.getItem('checked' || 'null');\n  const [checked, setChecked] = useState(initialValue);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = React.useState(0);\n  useEffect(() => {\n    window.localStorage.setItem('checked', JSON.stringify(checked));\n  });\n  const classes = useStyles();\n  const data = props.data;\n\n  const handleChange = event => {\n    setChecked(JSON.stringify(event.target.checked));\n  };\n\n  const handleChecked = event => {\n    if (JSON.stringify(event.target.checked) === 'true') {\n      return checked;\n      console.log(checked);\n    }\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }; //work around for async call with hooks\n\n\n  if (data != null && data.items != null) {\n    const rows = data.items.map(item => createData(item.owner.avatar_url, item.full_name, item.description));\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    console.log(data);\n    console.log(data.items[0].owner.avatar_url);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Repo Picker\"), /*#__PURE__*/React.createElement(RepoTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Avatar\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.full_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"avatar\",\n      className: classes.image,\n      src: row.avatar_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.h6,\n      variant: \"h6\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, row.full_name)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.description,\n      variant: \"h6\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, row.description)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      key: row.full_name //  checked={handleChecked}\n      ,\n      onChange: handleChange,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    })))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 48 * emptyRows\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      colSpan: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }))))), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [10],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return null;\n}\n\nexport default RepoPicker;","map":{"version":3,"sources":["/home/valynhall/code/flexera-assessment-app/my-app/src/components/RepoPicker.tsx"],"names":["React","useState","useEffect","RepoTable","Typography","Table","TableBody","TableCell","Checkbox","TableContainer","TableHead","TableRow","TablePagination","Paper","makeStyles","useStyles","table","minWidth","h6","fontSize","description","width","image","createData","avatar_url","full_name","RepoPicker","props","initialValue","window","localStorage","getItem","checked","setChecked","rowsPerPage","setRowsPerPage","page","setPage","setItem","JSON","stringify","classes","data","handleChange","event","target","handleChecked","console","log","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","items","rows","map","item","owner","emptyRows","Math","min","length","slice","row","height"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport RepoTable from './RepoTable';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 600,\n  },\n  h6:{\n    fontSize: 14,\n  },\n  description:{\n    fontSize: 14,\n    width: 50,\n  },\n  image: {\n    width: 50,\n  }\n});\n\ninterface IDataProps {\n    data?: any;\n    full_name?: string;\n    avatar_url?: string;\n    description?: string;\n}\n\nfunction createData(avatar_url: string, full_name: string, description: string) {\n  return {avatar_url, full_name, description };\n}\n\n\nfunction RepoPicker(props: IDataProps) {\n  let initialValue = window.localStorage.getItem('checked' || 'null');\n  const [checked, setChecked] = useState(initialValue);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = React.useState(0);\n \n\n  useEffect(() => {\n    window.localStorage.setItem('checked', JSON.stringify(checked))\n  })\n  const classes = useStyles();\n  const data =  props.data;\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(JSON.stringify(event.target.checked));\n  }\n\n  const handleChecked = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (JSON.stringify(event.target.checked) === 'true' ) {\n      return checked\n      console.log(checked)\n    }\n  }\n  \n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n \n  //work around for async call with hooks\n  if(data != null && data.items != null) {\n    const rows =  data.items.map((item: any) => (\n      createData(item.owner.avatar_url, item.full_name, item.description)\n    ))\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    console.log(data)\n    console.log(data.items[0].owner.avatar_url)\n    return (\n      <div className=\"App\">\n        <Typography variant=\"h4\">Repo Picker</Typography>\n\n        <RepoTable />\n\n        <TableContainer component={Paper}>\n        <Table size=\"small\" className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n            <TableCell align=\"center\">Avatar</TableCell>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Description</TableCell>\n              <TableCell align=\"center\"></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row: any) => (\n              <TableRow key={row.full_name}>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                <img alt=\"avatar\" className={classes.image} src={row.avatar_url}/>\n                </TableCell>\n              \n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                <Typography className={classes.h6} variant=\"h6\" component=\"span\">\n                  {row.full_name}\n                  </Typography>\n                </TableCell>\n                \n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <Typography className={classes.description} variant=\"h6\" component=\"span\">\n                    {row.description}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                    <Checkbox\n                      key={row.full_name}\n                      //  checked={handleChecked}\n                      onChange={handleChange}\n                      inputProps={{ 'aria-label': 'primary checkbox' }}\n                    />\n                </TableCell>\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n            <TableRow style={{ height: 48 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n          rowsPerPageOptions={[10]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default RepoPicker;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/valynhall/code/flexera-assessment-app/my-app/src/components/RepoPicker.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 600\n  },\n  h6: {\n    fontSize: 14\n  },\n  description: {\n    fontSize: 14,\n    width: 50\n  },\n  image: {\n    width: 50\n  },\n  clearButton: {\n    float: \"right\",\n    marginBottom: 16\n  },\n  pagination: {\n    marginRight: \"40%\"\n  }\n}); //data props are optional since they're not needed everywhere\n\n//success message functinality\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }));\n} //hand data down to table\n\n\nfunction createData(avatar_url, full_name, description, id) {\n  return {\n    avatar_url,\n    full_name,\n    description,\n    id\n  };\n}\n\nfunction RepoPicker(props) {\n  const [checked, setChecked] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles(); //data variable\n\n  const data = props.data; //saves checkbox state to localstorage and sets the state of checked for each checkbox by id\n\n  const handleChange = event => {\n    window.localStorage.setItem(event.target.id, JSON.stringify(event.target.checked));\n    setChecked({ ...checked,\n      [event.target.id]: event.target.checked\n    });\n  };\n\n  useEffect(() => {//run after checked state is updated\n  }, [checked]); //added clear storage handler to clear local storage and checked boxes if the user wishes\n\n  const handleClear = () => {\n    localStorage.clear();\n    setChecked([]);\n    setOpen(true);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  }; //set how many rows per page will render\n\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }; //close snackbar\n\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }; //cheking if the data exists to render\n\n\n  if (data != null && data.items != null) {\n    //render rows\n    const rows = data.items.map(item => createData(item.owner.avatar_url, item.full_name, item.description, item.id));\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClear,\n      className: classes.clearButton,\n      variant: \"contained\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"Clear All Favs\"), /*#__PURE__*/React.createElement(Snackbar, {\n      open: open,\n      autoHideDuration: 2000,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, \"Favs successflly cleared!\")), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Repo Fav Picker\"), /*#__PURE__*/React.createElement(TablePagination, {\n      className: classes.pagination,\n      rowsPerPageOptions: [10],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Avatar\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"Fav\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.full_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"avatar\",\n      className: classes.image,\n      src: row.avatar_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.h6,\n      variant: \"h6\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, row.full_name)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.description,\n      variant: \"h6\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, row.description)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        id: row.id,\n        checked: window.localStorage.getItem(row.id) === 'true',\n        onChange: handleChange,\n        icon: /*#__PURE__*/React.createElement(FavoriteBorder, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }\n        }),\n        checkedIcon: /*#__PURE__*/React.createElement(Favorite, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 62\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 32\n        }\n      }),\n      label: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    })))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 48 * emptyRows\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      colSpan: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }))))));\n  }\n\n  return null;\n}\n\nexport default RepoPicker;","map":{"version":3,"sources":["/home/valynhall/code/flexera-assessment-app/my-app/src/components/RepoPicker.tsx"],"names":["React","useState","useEffect","Typography","Table","TableBody","TableCell","Checkbox","FormControlLabel","Favorite","FavoriteBorder","TableContainer","TableHead","TableRow","TablePagination","Paper","Button","Snackbar","MuiAlert","makeStyles","useStyles","table","minWidth","h6","fontSize","description","width","image","clearButton","float","marginBottom","pagination","marginRight","Alert","props","createData","avatar_url","full_name","id","RepoPicker","checked","setChecked","rowsPerPage","setRowsPerPage","page","setPage","open","setOpen","classes","data","handleChange","event","window","localStorage","setItem","target","JSON","stringify","handleClear","clear","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleClose","reason","items","rows","map","item","owner","emptyRows","Math","min","length","slice","row","getItem","height"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 600,\n  },\n  h6:{\n    fontSize: 14,\n  },\n  description:{\n    fontSize: 14,\n    width: 50,\n  },\n  image: {\n    width: 50,\n  },\n  clearButton: {\n    float: \"right\",\n    marginBottom: 16,\n  },\n  pagination: {\n    marginRight: \"40%\",\n  }\n});\n\n//data props are optional since they're not needed everywhere\ninterface IDataProps {\n    data?: any;\n    id?: number;\n    full_name?: string;\n    avatar_url?: string;\n    description?: string;\n}\n\n//success message functinality\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//hand data down to table\nfunction createData(avatar_url: string, full_name: string, description: string, id: number) {\n  return {avatar_url, full_name, description, id };\n}\n\nfunction RepoPicker(props: IDataProps) {\n  const [checked, setChecked] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  //data variable\n  const data =  props.data;\n\n  //saves checkbox state to localstorage and sets the state of checked for each checkbox by id\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    window.localStorage.setItem(event.target.id, JSON.stringify(event.target.checked));\n    setChecked({...checked, [event.target.id] : event.target.checked });\n  }\n\n  useEffect(() => {\n    //run after checked state is updated\n   }, [checked])\n\n   //added clear storage handler to clear local storage and checked boxes if the user wishes\n  const handleClear = () => {\n    localStorage.clear()\n    setChecked([]);\n    setOpen(true);\n  }\n\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  //set how many rows per page will render\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  //close snackbar\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n \n  //cheking if the data exists to render\n  if(data != null && data.items != null) {\n    //render rows\n    const rows =  data.items.map((item: any) => (\n      createData(item.owner.avatar_url, item.full_name, item.description, item.id)\n    ))\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    return (\n      <div className=\"App\">\n        <Button onClick={handleClear} className={classes.clearButton} variant=\"contained\" color=\"secondary\">\n            Clear All Favs\n        </Button>\n        <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n          <Alert severity=\"success\">\n            Favs successflly cleared!\n          </Alert>\n      </Snackbar>\n        <Typography variant=\"h4\">Repo Fav Picker</Typography>\n        <TablePagination\n          className={classes.pagination}\n          rowsPerPageOptions={[10]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n          <TableContainer component={Paper}>\n          <Table size=\"small\" className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n              <TableCell align=\"center\">Avatar</TableCell>\n                <TableCell align=\"center\">Name</TableCell>\n                <TableCell align=\"center\">Description</TableCell>\n                <TableCell align=\"left\"> \n                  Fav\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row: any) => (\n              <TableRow key={row.full_name}>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                <img alt=\"avatar\" className={classes.image} src={row.avatar_url}/>\n                </TableCell>\n              \n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                <Typography className={classes.h6} variant=\"h6\" component=\"span\">\n                  {row.full_name}\n                  </Typography>\n                </TableCell>\n                \n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <Typography className={classes.description} variant=\"h6\" component=\"span\">\n                    {row.description}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"left\" component=\"th\" scope=\"row\">\n                    <FormControlLabel\n                      control={<Checkbox id={row.id}\n                      checked={window.localStorage.getItem(row.id) === 'true'}\n                      onChange={handleChange} \n                      icon={<FavoriteBorder />} checkedIcon={<Favorite />} />}\n                      label=\"\"\n                    />\n                </TableCell>\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n            <TableRow style={{ height: 48 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default RepoPicker;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/valynhall/code/flexera-assessment-app/my-app/src/components/RepoPicker.tsx\";\nimport React, { useEffect } from 'react';\nimport RepoTable from './RepoTable';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  h6: {\n    fontSize: 14\n  }\n});\n\nfunction createData(full_name, description) {\n  return {\n    full_name,\n    description\n  };\n}\n\nfunction RepoPicker(props) {\n  let initialValue = window.localStorage.getItem('checked' || 'null'); // const initialValueBool = initialValue\n\n  const [checked, setChecked] = React.useState(initialValue);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [page, setPage] = React.useState(0);\n  useEffect(() => {\n    window.localStorage.setItem('checked', JSON.stringify(checked));\n  });\n  const classes = useStyles();\n  const data = props.data;\n\n  const handleChange = event => {\n    setChecked(JSON.stringify(event.target.checked));\n    console.log(event.target.checked);\n  }; // const handleChecked = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   if (JSON.stringify(event.target.checked) === 'true' ) {\n  //     return checked\n  //   }\n  // }\n\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }; //work around for async call with hooks\n\n\n  if (data != null && data.items != null) {\n    const rows = data.items.map(item => createData(item.full_name, item.description));\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    console.log(data);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Repo Picker\"), /*#__PURE__*/React.createElement(RepoTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Avatar\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"Flag Me\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.full_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.h6,\n      variant: \"h6\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, row.full_name)), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.h6,\n      variant: \"h6\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, row.full_name)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.h6,\n      variant: \"h6\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, row.description)), /*#__PURE__*/React.createElement(Checkbox, {\n      key: row.full_name //  checked={handleChecked}\n      ,\n      onChange: handleChange,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 48 * emptyRows\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      colSpan: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }))))), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [10],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return null;\n}\n\nexport default RepoPicker;","map":{"version":3,"sources":["/home/valynhall/code/flexera-assessment-app/my-app/src/components/RepoPicker.tsx"],"names":["React","useEffect","RepoTable","Typography","Table","TableBody","TableCell","Checkbox","TableContainer","TableHead","TableRow","TablePagination","Paper","makeStyles","useStyles","table","minWidth","h6","fontSize","createData","full_name","description","RepoPicker","props","initialValue","window","localStorage","getItem","checked","setChecked","useState","rowsPerPage","setRowsPerPage","page","setPage","setItem","JSON","stringify","classes","data","handleChange","event","target","console","log","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","items","rows","map","item","emptyRows","Math","min","length","slice","row","height"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport RepoTable from './RepoTable';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { create } from 'istanbul-reports';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  h6:{\n    fontSize: 14,\n\n  }\n});\n\ninterface IDataProps {\n    data?: any;\n    full_name?: string;\n    avatar_url?: string;\n    description?: string;\n}\n\nfunction createData(full_name: string, description: string) {\n  return { full_name, description };\n}\n\n\nfunction RepoPicker(props: IDataProps) {\n  let initialValue = window.localStorage.getItem('checked' || 'null');\n  // const initialValueBool = initialValue\n  const [checked, setChecked] = React.useState(initialValue);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [page, setPage] = React.useState(0);\n \n\n  useEffect(() => {\n    window.localStorage.setItem('checked', JSON.stringify(checked))\n  })\n  const classes = useStyles();\n  const data =  props.data;\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(JSON.stringify(event.target.checked));\n    console.log(event.target.checked)\n  }\n\n  // const handleChecked = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   if (JSON.stringify(event.target.checked) === 'true' ) {\n  //     return checked\n  //   }\n  // }\n  \n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n \n  //work around for async call with hooks\n  if(data != null && data.items != null) {\n    const rows =  data.items.map((item: any) => (\n      createData(item.full_name, item.description)\n    ))\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    console.log(data)\n    return (\n      <div className=\"App\">\n        <Typography variant=\"h4\">Repo Picker</Typography>\n\n        <RepoTable />\n\n        <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n            <TableCell align=\"left\">Avatar</TableCell>\n              <TableCell align=\"left\">Name</TableCell>\n              <TableCell align=\"left\">Description</TableCell>\n              <TableCell align=\"left\">Flag Me</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row: any) => (\n              <TableRow key={row.full_name}>\n                <TableCell component=\"th\" scope=\"row\">\n                <Typography className={classes.h6} variant=\"h6\" component=\"span\">\n                  {row.full_name}\n                  </Typography>\n                </TableCell>\n              \n                <TableCell component=\"th\" scope=\"row\">\n                <Typography className={classes.h6} variant=\"h6\" component=\"span\">\n                  {row.full_name}\n                  </Typography>\n                </TableCell>\n                \n                <TableCell align=\"left\">\n                  <Typography className={classes.h6} variant=\"h6\" component=\"span\">\n                    {row.description}\n                    </Typography>\n                    </TableCell>\n                <Checkbox\n                  key={row.full_name}\n                  //  checked={handleChecked}\n                  onChange={handleChange}\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                />\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n            <TableRow style={{ height: 48 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n          rowsPerPageOptions={[10]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default RepoPicker;\n"]},"metadata":{},"sourceType":"module"}